>>> country = driver.find_element_by_xpath("//table/tbody[1]/tr[2]/td[1]")
>>> print(country.text)
USA
>>> country = driver.find_element_by_xpath("//table/tbody[1]/tr[3]/td[1]")
>>> print(country.text)
Italy
>>> data = []
>>> cases = driver.find_element_by_xpath("//table/tbody[1]/tr[2]/td[2]")
>>> print(cases.text)
164,253
>>> newCases = driver.find_element_by_xpath("//table/tbody[1]/tr[2]/td[3]")
>>> print(newCases.text)
+409
>>> newCases = driver.find_element_by_xpath("//table/tbody[1]/tr[1]/td[3]")
>>> print(newCases.text)
+1,082
>>> tableRow = driver.find_element_by_xpath("//table/tbody[1]/tr[2]")
>>> print(tableRow.text)
USA 164,253 +409 3,166 +10 5,506 155,581 3,512 496 10 Jan 20
>>> quit()
PS C:\WINDOWS\system32>

data = []
countries = []
cases = []
newCases = []

for dataPoints in range(1,20):
	data.append({ })


>>> from selenium import webdriver
>>> driver = webdriver.Firefox()
>>> driver.get("https://www.worldometers.info/coronavirus/")
>>> country = driver.find_element_by_xpath("//table/tbody[1]/tr[2]/td[1]").text
>>> print(country)
USA
>>> data = []
>>> data.append(country = driver.find_element_by_xpath("//table/tbody[1]/tr[2]/td[1]").text)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: append() takes no keyword arguments
>>> data.append(country)
>>> print(data)
['USA']
>>> countries = ['usa','gayland','boobland']
>>> cases = ['1000000','200000','30000']
>>> newCases = ['12','11','22']
>>> for i in range(3):
...     data.append({ countries: cases, newCases})
  File "<stdin>", line 2
    data.append({ countries: cases, newCases})
                                            ^
SyntaxError: invalid syntax
>>>
>>> import itertools
>>> data = itertools.chain(countries, cases, newCases)
>>> print(data)
<itertools.chain object at 0x000001E6EB03C198>
>>> list(data)
['usa', 'gayland', 'boobland', '1000000', '200000', '30000', '12', '11', '22']
>>> data = dict(zip(countries, cases, newCases))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: dictionary update sequence element #0 has length 3; 2 is required
>>> from itertools import zip_longest
>>> data = dict(zip(countries, zip(cases, newCases)))
... )
>>> print(data)
{'usa': ('1000000', '12'), 'gayland': ('200000', '11'), 'boobland': ('30000', '22')}
>>>
	